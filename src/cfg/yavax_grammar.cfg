

program
	: compoundstmt eof
	;
	
compoundstmt
	: '{' '}'
	| '{' statmentlst '}'
	;

statmentlst
	: statment
	| statmentlst statment
	;
	
statement
	: compoundstmt
    | expressionstmt
    | iterationstmt
    | selectionstmt
    | jumpstmt
    ;
	
expressionstmt
	: ';'
	: assigexpr ';'
	;
 
iterationstmt
	: 'while' '(' assigexpr ')' statement
	;
	
selectionstmt
	: 'if' '(' assigexpr ')' statement
	| 'if' '(' assigexpr ')' statement 'else' statement
	;
	
jumpstmt
	: 'return' expressionstmt
	;

parameter
	: declarator identifier
	;

paramlst
	: parameter
	| paramlst ',' parameter
	;
	
definition
	: vardef
	| funcdef
	;
	
funcdef
	: declarator identifier '(' paramlst ')' compoundstmt

vardef
	: declarator identifier '=' statement
	| declarator identifier ';'
	;
	
declarator
	: 'int'
	| 'real'
	| declaredname
	;
	
expr
	: assigexpr
	| expr ',' assigexpr
	;
	
assigexpr
	: disjunction
	| identifier '=' assigexpr
	;

    
disjunction
    : conjunction
    | disjunction '||' conjunction
    ;
conjunction
    : negation
    | conjunction '&&' negation
    ;
negation
    : relation
    | '!' relation
    ;
    
relation
    : sum
    | sum '<'  sum
    | sum '<=' sum
    | sum '==' sum
    | sum '!=' sum
    | sum '>=' sum
    | sum '>'  sum
    ;

sum
    : term
    | assigexpr '+' term
    | assigexpr '-' term
    ;

term
    : unary
    | term '*' unary
    | term '/' unary
    | term '%' unary
    ;
    
unary
	: factor
	| '-' factor
	| '+' factor
	| '&' factor
	| '*' factor
	| '--' factor
	| '++' factor
	;    
    
factor
    : constant
    | identifier
    | strliteral
    | '(' assigexpr ')'
    | declarator
    ;
		
declaredname
	: identifier
	;	
	
declaration
	| 'class' declaredname '{' declarationlst '}' ';'
	;

declarationlst
	| declarator declaredname ';'
	| declarationlst declarator declaredname ';'
	;
